on:
  workflow_call:

jobs:
  # TODO: try with x8
  build-drive:
    name: Build Drive image
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials and bucket region
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
        shell: bash

      - name: Build Docker image
        uses: ./.github/actions/docker
        with:
          image: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/drive
          target: drive-abci
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: true
          region: ${{ vars.AWS_REGION }}
          cache_mounts: |
            cargo_registry_index
            cargo_registry_cache
            cargo_git

  # TODO: try with x8
  build-dapi:
    name: Build DAPI image
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials and bucket region
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
        shell: bash

      - name: Build Docker image
        uses: ./.github/actions/docker
        with:
          image: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/dapi
          target: dapi
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: true
          region: ${{ vars.AWS_REGION }}
          cache_mounts: |
            cargo_registry_index
            cargo_registry_cache
            cargo_git

  # TODO: try with x8
  build-dashmate-helper:
    name: Build Dashmate helper image
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials and bucket region
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
        shell: bash

      - name: Build Docker image
        uses: ./.github/actions/docker
        with:
          image: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/dashmate_helper
          target: dashmate-helper
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: true
          region: ${{ vars.AWS_REGION }}
          cache_mounts: |
            cargo_registry_index
            cargo_registry_cache
            cargo_git
