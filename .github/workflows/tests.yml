name: Tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - master
      - v[0-9]+\.[0-9]+-dev
  schedule:
    - cron: '30 4 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Determine changed packages
    runs-on: ubuntu-latest
    outputs:
      js-packages: ${{ steps.filter-js.outputs.changes }}
      rs-packages: ${{ steps.filter-rs.outputs.rs-packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter-js
        with:
          filters: .github/filters-js.yml

      - uses: dorny/paths-filter@v2
        id: filter-rs
        with:
          filters: .github/filters-rs.yml

  # build-image-cache:
  #   name: Build image layer cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - run: yarn build

  #     - name: Build image cache
  #       run: dashmate build
#
#  build-rust-cache:
#    name: Warmup Rust build cache
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Build image cache
#        run: |
#          ...

  js-checks:
    name: JS Checks
    needs: [changes]
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    secrets: inherit
    strategy:
      matrix:
        js-package: ${{ fromJson(needs.changes.outputs.js-packages) }}
    uses: ./.github/workflows/js-checks.yml
    with:
      package: ${{ matrix.js-package }}

  rs-checks:
    name: RS Checks
    needs: [changes]
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    secrets: inherit
    strategy:
      matrix:
        rs-package: ${{ fromJson(needs.changes.outputs.rs-packages) }}
    uses: ./.github/workflows/rs-checks.yml
    with:
      package: ${{ matrix.rs-package }}

  wasm-dpp-errors:
    name: WASM compilation
    needs: [changes]
    if: ${{ contains(fromJson(needs.changes.outputs.js-packages), 'wasm-dpp') }}
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    timeout-minutes: 15
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Compile WASM
        run: cargo check --lib --target wasm32-unknown-unknown --package=wasm-dpp
