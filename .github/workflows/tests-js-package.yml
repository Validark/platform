on:
  workflow_call:
    inputs:
      package:
        description: The package name to run tests for
        type: string
        required: true
      skip-tests:
        description: Skip running tests
        type: boolean
        default: false
        required: false

jobs:
  lint:
    name: Linting
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    timeout-minutes: 15
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials and bucket region
        uses: aws-actions/configure-aws-credentials@v4
        if: contains(runner.name, 'ubuntu-platform')
        with:
          aws-region: eu-west-1

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          target: wasm32-unknown-unknown

      - name: Build package and dependencies
        run: yarn build --filter "+${{ inputs.package }}"

      - name: Run ESLinter
        run: yarn workspace "${{ inputs.package }}" lint

  test:
    name: Tests
    runs-on: [ "self-hosted", "linux", "x64", "ubuntu-platform" ]
    timeout-minutes: 120
    if: ${{ !inputs.skip-tests }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore timestamps
        uses: chetan/git-restore-mtime-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials and bucket region
        uses: aws-actions/configure-aws-credentials@v4
        if: contains(runner.name, 'ubuntu-platform')
        with:
          aws-region: eu-west-1

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          target: wasm32-unknown-unknown

      - name: Build package and dependencies
        run: yarn build --filter "+${{ inputs.package }}"
        env:
          NODE_ENV: test

      - name: Create necessary dotenv files
        run: |
          cp packages/dapi/.env.example packages/dapi/.env

      - name: Configure Drive ABCI layer cache
        uses: ./.github/actions/s3-layer-cache-settings
        id: drive_abci_layer_cache_settings
        with:
          name: dashpay/drive

      - name: Configure DAPI layer cache
        uses: ./.github/actions/s3-layer-cache-settings
        id: dapi_layer_cache_settings
        with:
          name: dashpay/dapi

      - name: Configure Dashmate Helper layer cache
        uses: ./.github/actions/s3-layer-cache-settings
        id: dashmate_helper_layer_cache_settings
        with:
          name: dashpay/dashmate-helper

      - name: Configure Base image layer cache
        uses: ./.github/actions/s3-layer-cache-settings
        id: base_layer_cache_settings
        with:
          name: dashpay/base

      - name: Run tests
        run: yarn test --filter "${{ inputs.package }}"
